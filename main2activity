package com.akinakbiyik.otokatalog;

import android.Manifest;
import android.content.Intent;
import android.content.pm.PackageManager;
import android.database.sqlite.SQLiteDatabase;
import android.database.sqlite.SQLiteStatement;
import android.graphics.Bitmap;
import android.graphics.BitmapFactory;
import android.net.Uri;
import android.os.Build;
import android.os.Bundle;
import android.provider.MediaStore;
import android.support.v7.app.AppCompatActivity;
import android.view.View;
import android.widget.Button;
import android.widget.EditText;
import android.widget.ImageView;

import java.io.ByteArrayOutputStream;
import java.io.IOException;

public class Main2Activity extends AppCompatActivity {

    // imageview ımızı burda tanımlıyoruz
    //EDİTTEXT İMİZİ BURDA TANIMLIYORUZ

    ImageView imageView ;
    EditText editText;
    static SQLiteDatabase database; //(heryerden ulaşabilmek için static ile başladık )
    Bitmap selectedImage; //Görselin kaydedilmesi için bitmapi burayada tanımladık.


    // bu kadar

    @Override
    protected void onCreate(Bundle savedInstanceState) {
        super.onCreate(savedInstanceState);
        setContentView(R.layout.activity_main2);
        // ımageviewımızı on creatın altındada bu sekilde tanımlıyoruz
        //EDİTTEXT IMIZI BURAYADA TANIMLIYORUZ
        //buttonumuzu buraya tanımlıyoruz
        imageView=(ImageView) findViewById(R.id.imageView);
        editText=(EditText) findViewById(R.id.editText);
        Button button=(Button) findViewById(R.id.button);

        //resim yeniyse nolsun eski ise nolsun kodları
        Intent intent=getIntent();
        String info =intent.getStringExtra("info");
        //eger yeni bi resim eklenecekse butonda değişiklik yap
          //yeni resim eklenecekse buton görünür olacak edittexte yazı olmayacak boş olacak uygulama geri acıldıgı zaman arkaplan resmi ayarladığımız olsun istioyrsak bitmapla başlayan kodu bunun altına yazıyoruz.
        if (info.equalsIgnoreCase("new")){
            Bitmap background= BitmapFactory.decodeResource(getApplicationContext().getResources(),R.drawable.background);
            imageView.setImageBitmap(background);
            button.setVisibility(View.VISIBLE);
            editText.setText("");

            // eski resim acılıyorsa buton görünmez olacak
        } else {

            button.setVisibility(View.INVISIBLE);




    }



        //tanımlama bu kadar




    }
    // kaydet butonu ve select  butonunu tanımlama kodu

    public void select (View view){

        //KULLANICI İZNİ İSTEMEK İÇİN (İNTENTİN İÇİNDE İSTİYORUZ)
// if build ile başlayan kod herzaman istenmeyebilir anroid versiyon farkından dolayı suan var
        if (Build.VERSION.SDK_INT >= Build.VERSION_CODES.M) {
            // versiyon farkı olan build kodu bu kadar
            if (checkSelfPermission(Manifest.permission.READ_EXTERNAL_STORAGE) != PackageManager.PERMISSION_GRANTED){

                requestPermissions(new String[]{Manifest.permission.READ_EXTERNAL_STORAGE},2);


            }else { //EĞER VARSA DİYE ELSE İLE DEVAM EDİYORUZ.
                Intent intent=new Intent(Intent.ACTION_PICK, MediaStore.Images.Media.EXTERNAL_CONTENT_URI);
                startActivityForResult(intent,1);

                //ERİŞİME İZNİMİZ YOKTU KULLANICI İZİN VERDİKTEN SONRA YAPILMASI İSTENEN İÇİN KODLAR
            }
        }
    }


    public void OnRequestPermissionsResult(int requestCode,String[] permissions, int[] grantResults){


    if (requestCode==2){

        if(grantResults.length>0 && grantResults[0]==PackageManager.PERMISSION_GRANTED){
            Intent intent=new Intent(Intent.ACTION_PICK, MediaStore.Images.Media.EXTERNAL_CONTENT_URI);
            startActivityForResult(intent,1);


        }
    }
       super.onRequestPermissionsResult(requestCode,permissions,grantResults);
    }




// KULLANICI İZNİ İSTEMEK BU KADAR



        @Override// kullanıcı resim secmesi için kod

        protected void onActivityResult(int requestCode,int resultCode,Intent data){

        if (requestCode==1&& resultCode==RESULT_OK && data !=null){

            Uri image=data.getData();

            try {
                selectedImage =MediaStore.Images.Media.getBitmap(this.getContentResolver(),image);
                imageView.setImageBitmap(selectedImage);
            } catch (IOException e) {
                e.printStackTrace();
            }


            super.onActivityResult(requestCode,resultCode,data);
        }
        }




//Görseli kaydetmek için

    public void kaydet (View view){
        String otoAdı=editText.getText().toString();
// görseli depolarken hangi formatta sıkıstırlaım hangi formatta kaydediyim hangi kalitede kaydediyim
        ByteArrayOutputStream outputStream = new ByteArrayOutputStream();
        selectedImage.compress(Bitmap.CompressFormat.PNG,50,outputStream);

        byte[] byteArray =outputStream.toByteArray();

        try{

            database=this.openOrCreateDatabase("OTO",MODE_PRIVATE,null);
            database.execSQL("CREATE TABLE IF NOT EXISTS oto(name VARCHAR,image BLOB)");
            String sqlString = (("INSERT INTO oto (name,image) VALUES(?,?)"));
            SQLiteStatement statement = database.compileStatement(sqlString);
            statement.bindString(1,otoAdı);
            statement.bindBlob(2,byteArray);
            statement.execute();








        }
            catch(Exception e){
            e.printStackTrace();
        }
             //kullanıcı kaydettikten sonra resmi geri dönsün kodu
           Intent intent=new Intent (getApplicationContext(),MainActivity.class);
            startActivity(intent);



        }
}











